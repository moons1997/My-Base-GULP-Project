(()=>{"use strict";var __webpack_modules__={"./app/js/index.js":
/*!*************************!*\
  !*** ./app/js/index.js ***!
  \*************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/Helpers */ \"./app/js/modules/Helpers.js\");\n// Importing Helpers\r\n\r\n\r\n// Getting Methods from Helpers\r\nconst { getNode, getNodes, addClass, removeClass, nextNode } = new _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__.NodeHelper();\r\nconst { imgLoadHelper } = new _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__.FuncsHelper();\r\n\r\nalert('hello');\r\nconsole.log('object');\r\n\r\nconst circleType = new CircleType(getNode('#rotated')).radius(80);\r\nwindow.scroll(function () {\r\n  let offset = $(window).scrollTop();\r\n  offset = offset * 0.4;\r\n  getNode('.circle-text').css({\r\n    transform: 'rotate(' + offset + 'deg)',\r\n  });\r\n});\r\n\r\n// Invoking Functions from Helper\r\n\n\n//# sourceURL=webpack://gulp-project/./app/js/index.js?")},"./app/js/modules/Helpers.js":
/*!***********************************!*\
  !*** ./app/js/modules/Helpers.js ***!
  \***********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NodeHelper\": () => (/* binding */ NodeHelper),\n/* harmony export */   \"FuncsHelper\": () => (/* binding */ FuncsHelper)\n/* harmony export */ });\nclass NodeHelper {\n\n    getNode = $node =>  document.querySelector($node)\n\n    getNodes = $nodes =>  document.querySelectorAll($nodes)\n\n    addClass = ($node, className = '') => {\n        if (typeof $node === 'string') {\n            const $element = this.getNode($node) \n            if ($element) {\n                $element.classList.add(className)\n            }\n            return ''\n        }\n        $node.classList.add(className)\n    }\n\n    removeClass = ($node, className = '') => {\n        if (typeof $node === 'string') {\n            const $element = this.getNode($node) \n            if ($element) {\n                $element.classList.remove(className)\n            }\n            return ''\n        }\n        $node.classList.remove(className)\n    }\n\n    nextNode = ($currentNode) => {\n        if (typeof $currentNode === 'string') {\n            const $element = this.getNode($currentNode) \n            if ($element) {\n                return $element.nextElementSibling\n            }\n        }\n        return $currentNode.nextElementSibling\n    }\n\n}\n\nclass FuncsHelper {\n\n    imgLoadHelper = () => {\n        const lazyImages = document.querySelectorAll('img[data-src],source[data-srcset]')\n        const windowHeight = document.documentElement.clientHeight\n    \n        let lazyImagesPositions = [];\n        if (lazyImages.length > 0) {\n            lazyImages.forEach(img => {\n                if (img.dataset.src || img.dataset.srcset) {\n                    lazyImagesPositions.push(img.getBoundingClientRect().top + pageYOffset)\n                    lazyScrollCheck()\n                }\n            })\n        }\n    \n        window.addEventListener('scroll', lazyScroll)\n    \n        function lazyScroll() {\n            if (lazyImages.length > 0) {\n                lazyScrollCheck()\n            }\n        }\n    \n        function lazyScrollCheck() {\n            let imgIndex = lazyImagesPositions.findIndex(\n                item => pageYOffset > item - windowHeight\n            )\n            if (imgIndex  >= 0) {\n                if (lazyImages[imgIndex].dataset.src) {\n                    lazyImages[imgIndex].src = lazyImages[imgIndex].dataset.src\n                    lazyImages[imgIndex].removeAttribute('data-src')\n                } else if (lazyImages[imgIndex].dataset.srcset) {\n                    lazyImages[imgIndex].srcset = lazyImages[imgIndex].dataset.srcset\n                    lazyImages[imgIndex].removeAttribute('data-srcset')\n                }\n                delete lazyImagesPositions[imgIndex]\n            }\n        }\n    }\n\n}\n\n\n\n\n//# sourceURL=webpack://gulp-project/./app/js/modules/Helpers.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,n)=>{for(var r in n)__webpack_require__.o(n,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./app/js/index.js")})();